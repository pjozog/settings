#!/bin/bash

DIR=$(dirname $(readlink -f "$0"))

##
# places a notification in the system tray
#
# first argument: string to show
# second argument: substring to show
# third argument: 1 if successful, 2 if not successful
#
function my-notify ()
{
    if [ $DISPLAY ]; then
        if [ $3 -eq 1 ]; then
            notify-send "$2" "$1" -u normal -i "$DIR/dialog-ok-apply.png"
        else
            echo $DIR/application-exit.png
            notify-send "$2" "$1" -u critical -i "$DIR/application-exit.png"
        fi
    fi
}

##
# plays an audio file via command-line
#
# first argument: file to play
#
function my-aplay ()
{
    aplay_missing=$(which aplay > /dev/null)$?
    if [ $aplay_missing -eq 0 ]; then
        # use nohup so emacs doesn't kill this when compilation finishes.  Also,
        # this prints some info messages on stderr, so don't show those.
        nohup aplay "$1" > /dev/null 2>&1 &
    fi
}

##
# Selects a random file contained in a directory
#
# first argument: directory to search
# second argument: pattern to search (for find)
#
function random-file ()
{
    find "$1" -iname "$2" | shuf | tail -1 | while read file; do
        echo $file
    done
}

if [ $# -lt 1 -o $# -gt 2 ]; then
    echo "Usage: $0 <build-directory> (build-command)"
    echo "       (build-command defaults to 'make -j$(nproc)')"
    exit 1
fi

# contains a list of wavs to play for success/failure
OWNCLOUD_WAVS=${HOME}/ownCloud/code/private/wavs

# project directory (where you type 'make')
PROJ="${1}"
cd "${PROJ}"

# command defaults to make
cmd=${2:-'make -j$(nproc)'}

# run the command while piping stdout to /dev/null (we only care warnings and
# errors)
eval ${cmd} > /dev/null

if [ $? -eq 0 ]; then
    # if compilation succeeded...
    wav="${HOME}/bin/compile-success.wav"
    if [ -d ${OWNCLOUD_WAVS} ]; then
        wav=$(random-file ${OWNCLOUD_WAVS}/success "*.wav")
    fi
    my-aplay "${wav}"
    my-notify "${PROJ}" "compiled successfully" 1
    exit 0
else
    # if compilation failed...
    wav="${HOME}/bin/compile-failed.wav"
    if [ -d ${OWNCLOUD_WAVS} ]; then
        wav=$(random-file ${OWNCLOUD_WAVS}/failed "*.wav")
    fi
    my-aplay "${wav}"
    my-notify "${PROJ}" "compiled unsuccessfully" 2
    exit 1
fi
